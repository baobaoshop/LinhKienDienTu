#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom3_LinhKienDienTu.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_LinhKienDienTu")]
	public partial class dbLinhKienDienTuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_DONHANG(CT_DONHANG instance);
    partial void UpdateCT_DONHANG(CT_DONHANG instance);
    partial void DeleteCT_DONHANG(CT_DONHANG instance);
    partial void InsertNHASX(NHASX instance);
    partial void UpdateNHASX(NHASX instance);
    partial void DeleteNHASX(NHASX instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertGIOHANG(GIOHANG instance);
    partial void UpdateGIOHANG(GIOHANG instance);
    partial void DeleteGIOHANG(GIOHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLINHKIEN(LINHKIEN instance);
    partial void UpdateLINHKIEN(LINHKIEN instance);
    partial void DeleteLINHKIEN(LINHKIEN instance);
    partial void InsertLOAILK(LOAILK instance);
    partial void UpdateLOAILK(LOAILK instance);
    partial void DeleteLOAILK(LOAILK instance);
    #endregion
		
		public dbLinhKienDienTuDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_LinhKienDienTuConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinhKienDienTuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinhKienDienTuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinhKienDienTuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinhKienDienTuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this.GetTable<CT_DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHASX> NHASXes
		{
			get
			{
				return this.GetTable<NHASX>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIOHANG> GIOHANGs
		{
			get
			{
				return this.GetTable<GIOHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LINHKIEN> LINHKIENs
		{
			get
			{
				return this.GetTable<LINHKIEN>();
			}
		}
		
		public System.Data.Linq.Table<LOAILK> LOAILKs
		{
			get
			{
				return this.GetTable<LOAILK>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DONHANG")]
	public partial class CT_DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADH;
		
		private string _MALK;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<LINHKIEN> _LINHKIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(string value);
    partial void OnMADHChanged();
    partial void OnMALKChanging(string value);
    partial void OnMALKChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CT_DONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._LINHKIEN = default(EntityRef<LINHKIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALK
		{
			get
			{
				return this._MALK;
			}
			set
			{
				if ((this._MALK != value))
				{
					if (this._LINHKIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALKChanging(value);
					this.SendPropertyChanging();
					this._MALK = value;
					this.SendPropertyChanged("MALK");
					this.OnMALKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CT_DONHANG", Storage="_DONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CT_DONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CT_DONHANGs.Add(this);
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(string);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINHKIEN_CT_DONHANG", Storage="_LINHKIEN", ThisKey="MALK", OtherKey="MALK", IsForeignKey=true)]
		public LINHKIEN LINHKIEN
		{
			get
			{
				return this._LINHKIEN.Entity;
			}
			set
			{
				LINHKIEN previousValue = this._LINHKIEN.Entity;
				if (((previousValue != value) 
							|| (this._LINHKIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINHKIEN.Entity = null;
						previousValue.CT_DONHANGs.Remove(this);
					}
					this._LINHKIEN.Entity = value;
					if ((value != null))
					{
						value.CT_DONHANGs.Add(this);
						this._MALK = value.MALK;
					}
					else
					{
						this._MALK = default(string);
					}
					this.SendPropertyChanged("LINHKIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHASX")]
	public partial class NHASX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANSX;
		
		private string _TENNSX;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _GHICHU;
		
		private EntitySet<LINHKIEN> _LINHKIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANSXChanging(string value);
    partial void OnMANSXChanged();
    partial void OnTENNSXChanging(string value);
    partial void OnTENNSXChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public NHASX()
		{
			this._LINHKIENs = new EntitySet<LINHKIEN>(new Action<LINHKIEN>(this.attach_LINHKIENs), new Action<LINHKIEN>(this.detach_LINHKIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANSX", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANSX
		{
			get
			{
				return this._MANSX;
			}
			set
			{
				if ((this._MANSX != value))
				{
					this.OnMANSXChanging(value);
					this.SendPropertyChanging();
					this._MANSX = value;
					this.SendPropertyChanged("MANSX");
					this.OnMANSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNSX", DbType="NVarChar(50)")]
		public string TENNSX
		{
			get
			{
				return this._TENNSX;
			}
			set
			{
				if ((this._TENNSX != value))
				{
					this.OnTENNSXChanging(value);
					this.SendPropertyChanging();
					this._TENNSX = value;
					this.SendPropertyChanged("TENNSX");
					this.OnTENNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASX_LINHKIEN", Storage="_LINHKIENs", ThisKey="MANSX", OtherKey="MANSX")]
		public EntitySet<LINHKIEN> LINHKIENs
		{
			get
			{
				return this._LINHKIENs;
			}
			set
			{
				this._LINHKIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINHKIENs(LINHKIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHASX = this;
		}
		
		private void detach_LINHKIENs(LINHKIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHASX = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADH;
		
		private System.Nullable<System.DateTime> _NGAYDH;
		
		private string _MAKH;
		
		private System.Nullable<double> _GIAMGIA;
		
		private System.Nullable<double> _THANHTOAN;
		
		private string _TRANGTHAI;
		
		private EntitySet<CT_DONHANG> _CT_DONHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(string value);
    partial void OnMADHChanged();
    partial void OnNGAYDHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDHChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnGIAMGIAChanging(System.Nullable<double> value);
    partial void OnGIAMGIAChanged();
    partial void OnTHANHTOANChanging(System.Nullable<double> value);
    partial void OnTHANHTOANChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public DONHANG()
		{
			this._CT_DONHANGs = new EntitySet<CT_DONHANG>(new Action<CT_DONHANG>(this.attach_CT_DONHANGs), new Action<CT_DONHANG>(this.detach_CT_DONHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDH
		{
			get
			{
				return this._NGAYDH;
			}
			set
			{
				if ((this._NGAYDH != value))
				{
					this.OnNGAYDHChanging(value);
					this.SendPropertyChanging();
					this._NGAYDH = value;
					this.SendPropertyChanged("NGAYDH");
					this.OnNGAYDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAMGIA", DbType="Float")]
		public System.Nullable<double> GIAMGIA
		{
			get
			{
				return this._GIAMGIA;
			}
			set
			{
				if ((this._GIAMGIA != value))
				{
					this.OnGIAMGIAChanging(value);
					this.SendPropertyChanging();
					this._GIAMGIA = value;
					this.SendPropertyChanged("GIAMGIA");
					this.OnGIAMGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTOAN", DbType="Float")]
		public System.Nullable<double> THANHTOAN
		{
			get
			{
				return this._THANHTOAN;
			}
			set
			{
				if ((this._THANHTOAN != value))
				{
					this.OnTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._THANHTOAN = value;
					this.SendPropertyChanged("THANHTOAN");
					this.OnTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(50)")]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CT_DONHANG", Storage="_CT_DONHANGs", ThisKey="MADH", OtherKey="MADH")]
		public EntitySet<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this._CT_DONHANGs;
			}
			set
			{
				this._CT_DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIOHANG")]
	public partial class GIOHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _MALK;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<LINHKIEN> _LINHKIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMALKChanging(string value);
    partial void OnMALKChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public GIOHANG()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._LINHKIEN = default(EntityRef<LINHKIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALK
		{
			get
			{
				return this._MALK;
			}
			set
			{
				if ((this._MALK != value))
				{
					if (this._LINHKIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALKChanging(value);
					this.SendPropertyChanging();
					this._MALK = value;
					this.SendPropertyChanged("MALK");
					this.OnMALKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_GIOHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINHKIEN_GIOHANG", Storage="_LINHKIEN", ThisKey="MALK", OtherKey="MALK", IsForeignKey=true)]
		public LINHKIEN LINHKIEN
		{
			get
			{
				return this._LINHKIEN.Entity;
			}
			set
			{
				LINHKIEN previousValue = this._LINHKIEN.Entity;
				if (((previousValue != value) 
							|| (this._LINHKIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINHKIEN.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._LINHKIEN.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MALK = value.MALK;
					}
					else
					{
						this._MALK = default(string);
					}
					this.SendPropertyChanged("LINHKIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _CCCD;
		
		private string _MATKHAU;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="VarChar(12)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_GIOHANG", Storage="_GIOHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINHKIEN")]
	public partial class LINHKIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALK;
		
		private string _TENLK;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private string _MANSX;
		
		private string _MALOAI;
		
		private System.Nullable<int> _NAMSX;
		
		private System.Nullable<double> _DONGIA;
		
		private EntitySet<CT_DONHANG> _CT_DONHANGs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
		private EntityRef<NHASX> _NHASX;
		
		private EntityRef<LOAILK> _LOAILK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALKChanging(string value);
    partial void OnMALKChanged();
    partial void OnTENLKChanging(string value);
    partial void OnTENLKChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnMANSXChanging(string value);
    partial void OnMANSXChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnNAMSXChanging(System.Nullable<int> value);
    partial void OnNAMSXChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public LINHKIEN()
		{
			this._CT_DONHANGs = new EntitySet<CT_DONHANG>(new Action<CT_DONHANG>(this.attach_CT_DONHANGs), new Action<CT_DONHANG>(this.detach_CT_DONHANGs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			this._NHASX = default(EntityRef<NHASX>);
			this._LOAILK = default(EntityRef<LOAILK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALK
		{
			get
			{
				return this._MALK;
			}
			set
			{
				if ((this._MALK != value))
				{
					this.OnMALKChanging(value);
					this.SendPropertyChanging();
					this._MALK = value;
					this.SendPropertyChanged("MALK");
					this.OnMALKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLK", DbType="NVarChar(100)")]
		public string TENLK
		{
			get
			{
				return this._TENLK;
			}
			set
			{
				if ((this._TENLK != value))
				{
					this.OnTENLKChanging(value);
					this.SendPropertyChanging();
					this._TENLK = value;
					this.SendPropertyChanged("TENLK");
					this.OnTENLKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANSX", DbType="Char(5)")]
		public string MANSX
		{
			get
			{
				return this._MANSX;
			}
			set
			{
				if ((this._MANSX != value))
				{
					if (this._NHASX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANSXChanging(value);
					this.SendPropertyChanging();
					this._MANSX = value;
					this.SendPropertyChanged("MANSX");
					this.OnMANSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(5)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAILK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSX", DbType="Int")]
		public System.Nullable<int> NAMSX
		{
			get
			{
				return this._NAMSX;
			}
			set
			{
				if ((this._NAMSX != value))
				{
					this.OnNAMSXChanging(value);
					this.SendPropertyChanging();
					this._NAMSX = value;
					this.SendPropertyChanged("NAMSX");
					this.OnNAMSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINHKIEN_CT_DONHANG", Storage="_CT_DONHANGs", ThisKey="MALK", OtherKey="MALK")]
		public EntitySet<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this._CT_DONHANGs;
			}
			set
			{
				this._CT_DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINHKIEN_GIOHANG", Storage="_GIOHANGs", ThisKey="MALK", OtherKey="MALK")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASX_LINHKIEN", Storage="_NHASX", ThisKey="MANSX", OtherKey="MANSX", IsForeignKey=true)]
		public NHASX NHASX
		{
			get
			{
				return this._NHASX.Entity;
			}
			set
			{
				NHASX previousValue = this._NHASX.Entity;
				if (((previousValue != value) 
							|| (this._NHASX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASX.Entity = null;
						previousValue.LINHKIENs.Remove(this);
					}
					this._NHASX.Entity = value;
					if ((value != null))
					{
						value.LINHKIENs.Add(this);
						this._MANSX = value.MANSX;
					}
					else
					{
						this._MANSX = default(string);
					}
					this.SendPropertyChanged("NHASX");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAILK_LINHKIEN", Storage="_LOAILK", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAILK LOAILK
		{
			get
			{
				return this._LOAILK.Entity;
			}
			set
			{
				LOAILK previousValue = this._LOAILK.Entity;
				if (((previousValue != value) 
							|| (this._LOAILK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAILK.Entity = null;
						previousValue.LINHKIENs.Remove(this);
					}
					this._LOAILK.Entity = value;
					if ((value != null))
					{
						value.LINHKIENs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAILK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.LINHKIEN = this;
		}
		
		private void detach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.LINHKIEN = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.LINHKIEN = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.LINHKIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAILK")]
	public partial class LOAILK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private string _GHICHU;
		
		private EntitySet<LINHKIEN> _LINHKIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public LOAILK()
		{
			this._LINHKIENs = new EntitySet<LINHKIEN>(new Action<LINHKIEN>(this.attach_LINHKIENs), new Action<LINHKIEN>(this.detach_LINHKIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAILK_LINHKIEN", Storage="_LINHKIENs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<LINHKIEN> LINHKIENs
		{
			get
			{
				return this._LINHKIENs;
			}
			set
			{
				this._LINHKIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINHKIENs(LINHKIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAILK = this;
		}
		
		private void detach_LINHKIENs(LINHKIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAILK = null;
		}
	}
}
#pragma warning restore 1591
